{
  "1023":{
    "HeaderLength":{
      "max":5,
      "value":"00908",
      "notes":"The length of the remainder of the request."
    },
    "RequestID":{
      "max":4,
      "value":"1023",
      "notes":"Identifies the type of request."
    },
    "KeyName":{
      "max":40,
      "notes":"Blank right padded. Indicates the name of the desired key. Leave blank and specify the Instance if you do not want to store the 40-byte KeyName field."
    },
    "KeySizeBits":{
      "max":4,
      "validation":{
        "value":["0128","0192","0256"]
      },
      "notes":"ASCII, right-justified, with leading zeros."
    },
    "ActivationDate":{
      "max":8,
      "notes":"ASCII, case insensitive. CCYYMMDD format. 00000000 indicates key is immediately usable."
    },
    "ExpirationDate":{
      "max":8,
      "notes":"ASCII. CCYYMMDD format. 00000000 indicates key does not expire."
    },
    "RolloverCode":{
      "max":1,
      "validation":{
        "value":["N","M","A"]
      },
      "notes":"ASCII, case insensitive. The value of N indicates the key is never rolled over (changed). The value of M indicates the key is manually rolled over. The value of A indicates the key is automatically rolled ove"
    },
    "RolloverDays":{
      "max":4,
      "notes":"ASCII, case insensitive. The number of days in a rollover period. 0000 if Never or Manual."
    },
    "Deletable":{
      "max":1,
      "validation":{
        "value":["Y","N"]
      },
      "notes":"ASCII, case insensitive. The value of Y indicates the encryption key can be deleted. The value of N indicates the key cannot be deleted."
    },
    "MirrorKey":{
      "max":1,
      "validation":{
        "value":["Y","N"]
      },
      "notes":"ASCII, case insensitive. The value of Y indicates the key is mirrored to a high availability Alliance Key Manager. The value of N indicates the key is not mirrored."
    },
    "AccessFlag":{
      "max":1,
      "validation":{
        "value":["1","2","3","4"]
      },
      "notes":"ASCII. 1 = No control. Anyone can access key. 2 = User control. CN on user cert must match a User-Key Name entry in the User Access table. 3 = Group control. OU on user cert must match a Group-Key Name entry in the Group Access table. 4 = User + Group control. CN and OU on user cert must match entries in both the User Access and Group Access tables."
    },
    "UserName":{
      "max":256,
      "notes":"ASCII, left-justified, with blank padding on the right."
    },
    "GroupName":{
      "max":256,
      "notes":"ASCII, left-justified, with blank padding on the right."
    },
    "KeyFormat": {
      "max": 3,
      "validation": {
        "value": [ "BIN", "B16", "B64", "RSA" ]
      },
      "notes": "Indicates the desired key format."
    },
    "RSAPrivateKeyName":{
      "optional": true,
      "max": 64,
      "notes":"64-byte, ASCII. Case sensitive, left justified, blank padded on the right. Must have .pem extension. This is the name of the RSA Private Key used to decrypt. If not exporting using RSA then set this field to 64 blanks."
    },
    "RSAPaddingMode":{
      "optional": true,
      "max":1,
      "validation":{
        "value":["1","2"]
      },
      "notes":"1 = RSA_PKCS1_PADDING. 2 = RSA_PKCS1_OAEP_PADDING (recommended). Note: exporting with RSA_NO_PADDING is considered insecure and is therefore not supported. No support is provided for RSA_SSLV23_PADDING padding."
    },
    "Value":{
      "optional": true,
      "max":256,
      "notes":"If the request specified BIN (binary) this field contains the actual key in binary format. For a 256 bit key, the value is left justified in the first 32 bytes of the field. For a 192-bit key, the value is left justified in the first 24 bytes of this field. For a 128 bit key the value is left justified in the first 16 bytes of this field. \n If the request specified B16 (Base16, or hex) this field contains the actual key in hex format. For a 256 bit key, the value is left justified in the first 64 bytes of the field. For a 192-bit key, the value is left justified in the first 48 bytes of this field. For a 128 bit key the value is left justified in the first 32 bytes of this field. \n If the request specified B64 (Base64) this field contains the actual key in Base64 format. For a 256 bit key, the value is left justified in the first 44 bytes of the field. For a 192-bit key, the value is left justified in the first 32 bytes of this field. For a 128 bit key the value is left justified in the first 24 bytes of this field.\n If the request specified RSA (RSA encrypted key) this field contains the key up to 256 bytes in length. \n If using the administrative console to import an RSA encrypted key the following fields need to be passed in on the command line. They will enable the administrative console to write the encrypted key returned from the key server to a file."
    },
    "convert":["HeaderLength", "RequestID", "KeyName",  "KeySizeBits", "ActivationDate", "ExpirationDate", "RolloverCode",
      "RolloverDays", "Deletable", "MirrorKey", "AccessFlag", "UserName", "GroupName", "KeyFormat", "RSAPrivateKeyName", "RSAPaddingMode" ]
  }
}